name: Deploy to Production

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Deploy to Seed-E Server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.PORT }}
          envs: POSTGRES_PASSWORD,XPUB_HASH_SECRET,NEXTAUTH_SECRET,NEXTAUTH_URL,LND_REST_URL,LND_INVOICE_MACAROON
          script: |
            cd /home/seed-e/Seed-E
            git pull origin main

            # Create .env file with all required environment variables
            cat > .env << EOF
            POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            XPUB_HASH_SECRET=${{ secrets.XPUB_HASH_SECRET }}
            NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}
            NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }}
            LND_REST_URL=${{ secrets.LND_REST_URL }}
            LND_INVOICE_MACAROON=${{ secrets.LND_INVOICE_MACAROON }}
            EOF

            # Stop and rebuild containers
            docker-compose down
            docker-compose build --no-cache
            docker-compose up -d

            # Wait for database to be ready
            sleep 10

            # Run database migrations
            docker-compose exec -T app npx prisma generate
            docker-compose exec -T app npx prisma migrate deploy

            # Clean up old images
            docker image prune -f

            # Check container status
            docker-compose ps
            echo "Deployment completed successfully!"
